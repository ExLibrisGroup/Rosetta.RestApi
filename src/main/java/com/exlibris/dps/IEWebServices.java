
package com.exlibris.dps;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebService(name = "IEWebServices", targetNamespace = "http://dps.exlibris.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface IEWebServices {


    /**
     * 
     * @param pdsHandle
     * @param event
     * @throws UserAuthorizeException_Exception
     * @throws LockedIeException_Exception
     * @throws FixityEventException_Exception
     * @throws Exception_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "generateFixityEvent", targetNamespace = "http://dps.exlibris.com/", className = "com.exlibris.dps.GenerateFixityEvent")
    @ResponseWrapper(localName = "generateFixityEventResponse", targetNamespace = "http://dps.exlibris.com/", className = "com.exlibris.dps.GenerateFixityEventResponse")
    public void generateFixityEvent(
        @WebParam(name = "pdsHandle", targetNamespace = "")
        String pdsHandle,
        @WebParam(name = "event", targetNamespace = "")
        FixityEvent event)
        throws Exception_Exception, FixityEventException_Exception, LockedIeException_Exception, UserAuthorizeException_Exception
    ;

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getHeartBit", targetNamespace = "http://dps.exlibris.com/", className = "com.exlibris.dps.GetHeartBit")
    @ResponseWrapper(localName = "getHeartBitResponse", targetNamespace = "http://dps.exlibris.com/", className = "com.exlibris.dps.GetHeartBitResponse")
    public String getHeartBit();

    /**
     * 
     * @param iePid
     * @param flags
     * @param pdsHandle
     * @return
     *     returns java.lang.String
     * @throws UserAuthorizeException_Exception
     * @throws IEWSException_Exception
     */
    @WebMethod
    @WebResult(name = "getIE", targetNamespace = "")
    @RequestWrapper(localName = "getIE", targetNamespace = "http://dps.exlibris.com/", className = "com.exlibris.dps.GetIE")
    @ResponseWrapper(localName = "getIEResponse", targetNamespace = "http://dps.exlibris.com/", className = "com.exlibris.dps.GetIEResponse")
    public String getIE(
        @WebParam(name = "pdsHandle", targetNamespace = "")
        String pdsHandle,
        @WebParam(name = "iePid", targetNamespace = "")
        String iePid,
        @WebParam(name = "flags", targetNamespace = "")
        Long flags)
        throws IEWSException_Exception, UserAuthorizeException_Exception
    ;

    /**
     * 
     * @param pdsHandle
     * @param iePID
     * @return
     *     returns java.lang.String
     * @throws UserAuthorizeException_Exception
     * @throws NotInPermanentException_Exception
     * @throws IEWSException_Exception
     */
    @WebMethod
    @WebResult(name = "getIEMD", targetNamespace = "")
    @RequestWrapper(localName = "getIEMD", targetNamespace = "http://dps.exlibris.com/", className = "com.exlibris.dps.GetIEMD")
    @ResponseWrapper(localName = "getIEMDResponse", targetNamespace = "http://dps.exlibris.com/", className = "com.exlibris.dps.GetIEMDResponse")
    public String getIEMD(
        @WebParam(name = "pdsHandle", targetNamespace = "")
        String pdsHandle,
        @WebParam(name = "iePID", targetNamespace = "")
        String iePID)
        throws IEWSException_Exception, NotInPermanentException_Exception, UserAuthorizeException_Exception
    ;

    /**
     * 
     * @param pdsHandle
     * @param pid
     * @return
     *     returns java.lang.String
     * @throws UserAuthorizeException_Exception
     * @throws NotInPermanentException_Exception
     * @throws IEWSException_Exception
     */
    @WebMethod
    @WebResult(name = "getMD", targetNamespace = "")
    @RequestWrapper(localName = "getMD", targetNamespace = "http://dps.exlibris.com/", className = "com.exlibris.dps.GetMD")
    @ResponseWrapper(localName = "getMDResponse", targetNamespace = "http://dps.exlibris.com/", className = "com.exlibris.dps.GetMDResponse")
    public String getMD(
        @WebParam(name = "pdsHandle", targetNamespace = "")
        String pdsHandle,
        @WebParam(name = "PID", targetNamespace = "")
        String pid)
        throws IEWSException_Exception, NotInPermanentException_Exception, UserAuthorizeException_Exception
    ;

    /**
     * 
     * @param ripID
     * @param pdsHandle
     * @return
     *     returns java.lang.String
     * @throws UserAuthorizeException_Exception
     * @throws IEWSException_Exception
     */
    @WebMethod
    @WebResult(name = "getRipStatus", targetNamespace = "")
    @RequestWrapper(localName = "getRipStatus", targetNamespace = "http://dps.exlibris.com/", className = "com.exlibris.dps.GetRipStatus")
    @ResponseWrapper(localName = "getRipStatusResponse", targetNamespace = "http://dps.exlibris.com/", className = "com.exlibris.dps.GetRipStatusResponse")
    public String getRipStatus(
        @WebParam(name = "pdsHandle", targetNamespace = "")
        String pdsHandle,
        @WebParam(name = "ripID", targetNamespace = "")
        Long ripID)
        throws IEWSException_Exception, UserAuthorizeException_Exception
    ;

    /**
     * 
     * @param pdsHandle
     * @param iePID
     * @param metadata
     * @throws UserAuthorizeException_Exception
     * @throws InvalidMIDException_Exception
     * @throws LockedIeException_Exception
     * @throws InvalidXmlException_Exception
     * @throws NotInPermanentException_Exception
     * @throws InvalidTypeException_Exception
     * @throws Exception_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "updateIEMD", targetNamespace = "http://dps.exlibris.com/", className = "com.exlibris.dps.UpdateIEMD")
    @ResponseWrapper(localName = "updateIEMDResponse", targetNamespace = "http://dps.exlibris.com/", className = "com.exlibris.dps.UpdateIEMDResponse")
    public void updateIEMD(
        @WebParam(name = "pdsHandle", targetNamespace = "")
        String pdsHandle,
        @WebParam(name = "iePID", targetNamespace = "")
        String iePID,
        @WebParam(name = "metadata", targetNamespace = "")
        List<MetaData> metadata)
        throws Exception_Exception, InvalidMIDException_Exception, InvalidTypeException_Exception, InvalidXmlException_Exception, LockedIeException_Exception, NotInPermanentException_Exception, UserAuthorizeException_Exception
    ;

    /**
     * 
     * @param pdsHandle
     * @param pid
     * @param metadata
     * @throws UserAuthorizeException_Exception
     * @throws InvalidMIDException_Exception
     * @throws LockedIeException_Exception
     * @throws NotInPermanentException_Exception
     * @throws InvalidXmlException_Exception
     * @throws InvalidTypeException_Exception
     * @throws Exception_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "updateMD", targetNamespace = "http://dps.exlibris.com/", className = "com.exlibris.dps.UpdateMD")
    @ResponseWrapper(localName = "updateMDResponse", targetNamespace = "http://dps.exlibris.com/", className = "com.exlibris.dps.UpdateMDResponse")
    public void updateMD(
        @WebParam(name = "pdsHandle", targetNamespace = "")
        String pdsHandle,
        @WebParam(name = "PID", targetNamespace = "")
        String pid,
        @WebParam(name = "metadata", targetNamespace = "")
        List<MetaData> metadata)
        throws Exception_Exception, InvalidMIDException_Exception, InvalidTypeException_Exception, InvalidXmlException_Exception, LockedIeException_Exception, NotInPermanentException_Exception, UserAuthorizeException_Exception
    ;

    /**
     * 
     * @param iePid
     * @param submissionReason
     * @param repPid
     * @param representationContent
     * @param pdsHandle
     * @return
     *     returns long
     * @throws UserAuthorizeException_Exception
     * @throws LockedIeException_Exception
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateRepresentation", targetNamespace = "http://dps.exlibris.com/", className = "com.exlibris.dps.UpdateRepresentation")
    @ResponseWrapper(localName = "updateRepresentationResponse", targetNamespace = "http://dps.exlibris.com/", className = "com.exlibris.dps.UpdateRepresentationResponse")
    public long updateRepresentation(
        @WebParam(name = "pdsHandle", targetNamespace = "")
        String pdsHandle,
        @WebParam(name = "iePid", targetNamespace = "")
        String iePid,
        @WebParam(name = "repPid", targetNamespace = "")
        String repPid,
        @WebParam(name = "submissionReason", targetNamespace = "")
        String submissionReason,
        @WebParam(name = "representationContent", targetNamespace = "")
        List<RepresentationContent> representationContent)
        throws Exception_Exception, LockedIeException_Exception, UserAuthorizeException_Exception
    ;

}
